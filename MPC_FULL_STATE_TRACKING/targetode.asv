function [xdot] = targetode(t,x,param)

n   = param.n ;
It  = param.target_inertia ;

qt      =   x(1:4);
wt      =   x(5:7);

%% Rotation
% Normalize quaternion vector
qt = qt/norm(qt) ;

% Build skewsymmetric matric of wc
OM = [0, wt(3), -wt(2), wt(1);
      -wt(3), 0, wt(1), wt(2);
      wt(2), -wt(1), 0, wt(3);
      -wt(1), -wt(2), -wt(3), 0] ;

% Integrate Euler equations for the chaser in body frame
qt_dot = 0.5 * OM * qt ;

icx = Ic(1, 1) ; icy = Ic(2, 2) ; icz = Ic(3, 3) ;

dom_x = ((icy - icz) / icx) * wc(2) * wc(3) + u(4) / icx + d(4) ;
dom_y = ((icz - icx) / icy) * wc(1) * wc(3) + u(5) / icy + d(5) ;
dom_z = ((icx - icy) / icz) * wc(2) * wc(1) + u(6) / icz + d(6) ;

dom = [dom_x; dom_y; dom_z] ;

%% Return state derivative
xdot = [qt_dot;dom];
